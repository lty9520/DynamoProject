<Workspace Version="0.9.1.4062" X="1646.11212725458" Y="1848.26352524092" zoom="0.730653134801289" Name="Home" Description="" RunType="Manual" RunPeriod="1000" HasRunWithoutCrash="True">
  <NamespaceResolutionMap>
    <ClassMap partialName="Point" resolvedName="Autodesk.DesignScript.Geometry.Point" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="Polygon" resolvedName="Autodesk.DesignScript.Geometry.Polygon" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="PolyCurve" resolvedName="Autodesk.DesignScript.Geometry.PolyCurve" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="Cuboid" resolvedName="Autodesk.DesignScript.Geometry.Cuboid" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="Surface" resolvedName="Autodesk.DesignScript.Geometry.Surface" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="List" resolvedName="DSCore.List" assemblyName="DSCoreNodes.dll" />
  </NamespaceResolutionMap>
  <Elements>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="b4507afa-aec1-48bf-938a-bb1176acde48" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="-1217.65622215585" y="-174.564728421163" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="//创建四边形面&#xA;//p-&gt;面的中心点&#xA;//r-&gt;面的边长&#xA;//z-&gt;面的位置z值&#xA;def createQuadCenter(p, r)&#xA;{&#xA;	//	.p1----.p2&#xA;	//	|		|&#xA;	//	|	p	|&#xA;	//	|		|&#xA;	//	|		|&#xA;	//	.p4----.p3&#xA;	x1 = p.X - r;&#xA;	y1 = p.Y - r;&#xA;	z1 = p.Z;&#xA;&#xA;	//test=p.X;&#xA;&#xA;	x2 = p.X + r;&#xA;	y2 = p.Y - r;&#xA;	z2 = p.Z;&#xA;&#xA;	x3 = p.X + r;&#xA;	y3 = p.Y + r;&#xA;	z3 = p.Z;&#xA;&#xA;	x4 = p.X - r;&#xA;	y4 = p.Y + r;&#xA;	z4 = p.Z;&#xA;&#xA;	p1 = Point.ByCoordinates(x1, y1, z1);&#xA;	p2 = Point.ByCoordinates(x2, y2, z2);&#xA;	p3 = Point.ByCoordinates(x3, y3, z3);&#xA;	p4 = Point.ByCoordinates(x4, y4, z4);&#xA;&#xA;	poly = Polygon.ByPoints({p1, p2, p3, p4});&#xA;&#xA;	//l1 = List.FirstItem(p1);&#xA;	//l1 = List.AddItemToEnd(p2);&#xA;	//l1 = List.AddItemToEnd(p3);&#xA;	//l1 = List.AddItemToEnd(p4);&#xA;&#xA;	//sur = Surface.ByPatch(ploy);&#xA;&#xA;	return = poly;&#xA;};" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="bbd1818f-055a-4df0-aff7-d090082aed1e" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="-3467" y="-3978" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="Point.ByCoordinates(0, 0, 0);&#xA;10;" ShouldFocus="false" />
    <CoreNodeModels.Watch guid="274c0dbb-ce47-4bd3-b5e5-71dbb034d72d" type="CoreNodeModels.Watch" nickname="Watch" x="-26.266018456326" y="-2447.92611666538" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="594eed4b-c534-4b06-b22e-4a8c3387650e" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="-2758.65590921004" y="-4110.598326646" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="point;&#xA;r;&#xA;&#xA;geometry = [Imperative]&#xA;{&#xA;	l = {};&#xA;	i = 5;&#xA;	while( i &gt; 0 )&#xA;	{&#xA;&#xA;		r = r + 1;&#xA;		l = List.AddItemToEnd(createQuadCenter(point, r), l);&#xA;&#xA;		i = i - 1;&#xA;&#xA;	}&#xA;&#xA;	return = l;&#xA;&#xA;};" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="e33ede6c-2584-4453-a710-d069a8839c71" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="-611.123717663323" y="-146.598482388285" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="//创建梯形平面&#xA;//p-&gt;短边中心点&#xA;//d1-&gt;短边边长&#xA;//d2-&gt;长边边长&#xA;//h-&gt;高&#xA;//d-&gt;倾斜进深&#xA;//direc-&gt;倾斜方向&#xA;def createTrape(p, d1, d2, h, d, direc)&#xA;{&#xA;&#xA;	x1 = 0;&#xA;	x2 = 0;&#xA;	x3 = 0;&#xA;	x4 = 0;&#xA;	y1 = 0;&#xA;	y2 = 0;&#xA;	y3 = 0;&#xA;	y4 = 0;&#xA;	z1 = 0;&#xA;	z2 = 0;&#xA;	z3 = 0;&#xA;	z4 = 0;&#xA;	geometry = [Imperative]&#xA;	{&#xA;		if(direc == &quot;y-&quot;)&#xA;		{&#xA;			x1 = p.X - d1 / 2;&#xA;			y1 = p.Y;&#xA;			z1 = p.Z;&#xA;&#xA;			x2 = p.X + d1 / 2;&#xA;			y2 = p.Y;&#xA;			z2 = p.Z;&#xA;&#xA;			x3 = p.X + d2 / 2;&#xA;			y3 = p.Y - d;&#xA;			z3 = p.Z + h;&#xA;&#xA;			x4 = p.X - d2 / 2;&#xA;			y4 = p.Y - d;&#xA;			z4 = p.Z + h;&#xA;		}&#xA;&#xA;		if(direc == &quot;y+&quot;)&#xA;		{&#xA;			x1 = p.X - d1 / 2;&#xA;			y1 = p.Y;&#xA;			z1 = p.Z;&#xA;&#xA;			x2 = p.X + d1 / 2;&#xA;			y2 = p.Y;&#xA;			z2 = p.Z;&#xA;&#xA;			x3 = p.X + d2 / 2;&#xA;			y3 = p.Y + d;&#xA;			z3 = p.Z + h;&#xA;&#xA;			x4 = p.X - d2 / 2;&#xA;			y4 = p.Y + d;&#xA;			z4 = p.Z + h;&#xA;		}&#xA;&#xA;		if(direc == &quot;x-&quot;)&#xA;		{&#xA;			x1 = p.X;&#xA;			y1 = p.Y - d1 / 2;&#xA;			z1 = p.Z;&#xA;&#xA;			x2 = p.X;&#xA;			y2 = p.Y+ d1 / 2;&#xA;			z2 = p.Z;&#xA;&#xA;			x3 = p.X - d;&#xA;			y3 = p.Y + d2 / 2;&#xA;			z3 = p.Z + h;&#xA;&#xA;			x4 = p.X - d;&#xA;			y4 = p.Y - d2 / 2;&#xA;			z4 = p.Z + h;&#xA;		}&#xA;&#xA;		if(direc == &quot;x+&quot;)&#xA;		{&#xA;			x1 = p.X;&#xA;			y1 = p.Y- d1 / 2;&#xA;			z1 = p.Z;&#xA;&#xA;			x2 = p.X;&#xA;			y2 = p.Y+ d1 / 2;&#xA;			z2 = p.Z;&#xA;&#xA;			x3 = p.X + d;&#xA;			y3 = p.Y + d2 / 2;&#xA;			z3 = p.Z + h;&#xA;&#xA;			x4 = p.X + d;&#xA;			y4 = p.Y - d2 / 2;&#xA;			z4 = p.Z + h;&#xA;		}&#xA;&#xA;	}&#xA;&#xA;	p1 = Point.ByCoordinates(x1, y1, z1);&#xA;	p2 = Point.ByCoordinates(x2, y2, z2);&#xA;	p3 = Point.ByCoordinates(x3, y3, z3);&#xA;	p4 = Point.ByCoordinates(x4, y4, z4);&#xA;&#xA;	poly = Polygon.ByPoints({p1, p2, p3, p4});&#xA;&#xA;	return = poly;&#xA;&#xA;};" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="f175e972-ff1d-42e6-a572-0733af4a5991" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="72.8609003471281" y="-154.771304019815" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="//创建栌枓U型侧面&#xA;//p-&gt;底边中心定位点&#xA;//w-&gt;长边长&#xA;//w1-&gt;顶部短边长&#xA;//h1-&gt;高（h - h1)&#xA;//h2-&gt;中间U型部分高&#xA;//direc-&gt;绘制方向&#xA;def createUPlane(p, w, w1, h1, h2, direc)&#xA;{&#xA;	x1 =0;&#xA;	y1 =0;&#xA;	z1 =0;&#xA;	x2 =0;&#xA;	y2 =0;&#xA;	z2 =0;&#xA;	x3 =0;&#xA;	y3 =0;&#xA;	z3 =0;&#xA;	x4 =0;&#xA;	y4 =0;&#xA;	z4 =0;&#xA;	x5 =0;&#xA;	y5 =0;&#xA;	z5 =0;&#xA;	x6 =0;&#xA;	y6 =0;&#xA;	z6 =0;&#xA;	x7 =0;&#xA;	y7 =0;&#xA;	z7 =0;&#xA;	x8 =0;&#xA;	y8 =0;&#xA;	z8 =0;&#xA;&#xA;	geometry = [Imperative]&#xA;	{&#xA;&#xA;		if(direc == &quot;x&quot;)&#xA;		{&#xA;			x1 = p.X - w / 2;&#xA;			y1 = p.Y;&#xA;			z1 = p.Z;&#xA;&#xA;			x2 = p.X + w / 2;&#xA;			y2 = p.Y;&#xA;			z2 = p.Z;&#xA;&#xA;			x3 = p.X + w / 2;&#xA;			y3 = p.Y;&#xA;			z3 = p.Z + h1;&#xA;&#xA;			x4 = p.X + w1 / 2;&#xA;			y4 = p.Y;&#xA;			z4 = p.Z + h1;&#xA;&#xA;			x5 = p.X + w1 / 2;&#xA;			y5 = p.Y;&#xA;			z5 = p.Z + h1 - h2;&#xA;&#xA;			x6 = p.X - w1 / 2;&#xA;			y6 = p.Y;&#xA;			z6 = p.Z + h1 - h2;&#xA;&#xA;			x7 = p.X - w1 / 2;&#xA;			y7 = p.Y;&#xA;			z7 = p.Z + h1;&#xA;&#xA;			x8 = p.X - w / 2;&#xA;			y8 = p.Y;&#xA;			z8 = p.Z + h1;&#xA;		}&#xA;&#xA;		if(direc == &quot;y&quot;)&#xA;		{&#xA;			x1 = p.X;&#xA;			y1 = p.Y - w / 2;&#xA;			z1 = p.Z;&#xA;&#xA;			x2 = p.X;&#xA;			y2 = p.Y + w / 2;&#xA;			z2 = p.Z;&#xA;&#xA;			x3 = p.X;&#xA;			y3 = p.Y + w / 2;&#xA;			z3 = p.Z + h1;&#xA;&#xA;			x4 = p.X;&#xA;			y4 = p.Y + w1 / 2;&#xA;			z4 = p.Z + h1;&#xA;&#xA;			x5 = p.X;&#xA;			y5 = p.Y + w1 / 2;&#xA;			z5 = p.Z + h1 - h2;&#xA;&#xA;			x6 = p.X;&#xA;			y6 = p.Y - w1 / 2;&#xA;			z6 = p.Z + h1 - h2;&#xA;&#xA;			x7 = p.X;&#xA;			y7 = p.Y - w1 / 2;&#xA;			z7 = p.Z + h1;&#xA;&#xA;			x8 = p.X;&#xA;			y8 = p.Y - w / 2;&#xA;			z8 = p.Z + h1;&#xA;		}&#xA;&#xA;	}&#xA;&#xA;	p1 = Point.ByCoordinates(x1, y1, z1);&#xA;	p2 = Point.ByCoordinates(x2, y2, z2);&#xA;	p3 = Point.ByCoordinates(x3, y3, z3);&#xA;	p4 = Point.ByCoordinates(x4, y4, z4);&#xA;	p5 = Point.ByCoordinates(x5, y5, z5);&#xA;	p6 = Point.ByCoordinates(x6, y6, z6);&#xA;	p7 = Point.ByCoordinates(x7, y7, z7);&#xA;	p8 = Point.ByCoordinates(x8, y8, z8);&#xA;&#xA;	poly = Polygon.ByPoints({p1, p2, p3, p4, p5, p6, p7, p8});&#xA;&#xA;	return = poly;&#xA;};" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="3c56039a-0c02-4545-a8c1-1ddeaba22086" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="868.768936703111" y="-146.556744825354" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="//创建卷杀曲线&#xA;//p-&gt;定位点&#xA;//b1-&gt;卷杀部分长&#xA;//b2-&gt;其余部分长&#xA;//m-&gt;卷杀段数&#xA;//h1-&gt;卷杀部分高&#xA;//h-&gt;整体高&#xA;//direc-&gt;方向&#xA;def createJuanshaCurve(p, b1, b2, m, h1, h, direc)&#xA;{&#xA;	x1 = 0;&#xA;	y1 = 0;&#xA;	z1 = 0;&#xA;	x2 = 0;&#xA;	y2 = 0;&#xA;	z2 = 0;&#xA;	x3 = 0;&#xA;	y3 = 0;&#xA;	z3 = 0;&#xA;	x4 = 0;&#xA;	y4 = 0;&#xA;	z4 = 0;&#xA;	x5 = 0;&#xA;	y5 = 0;&#xA;	z5 = 0;&#xA;	x6 = 0;&#xA;	y6 = 0;&#xA;	z6 = 0;&#xA;	x7 = 0;&#xA;	y7 = 0;&#xA;	z7 = 0;&#xA;	x8 = 0;&#xA;	y8 = 0;&#xA;	z8 = 0;&#xA;	geometry = [Imperative]&#xA;	{&#xA;&#xA;		if(direc == &quot;x+&quot;)&#xA;		{&#xA;			x1 = p.X;&#xA;			y1 = p.Y;&#xA;			z1 = p.Z;&#xA;&#xA;			x2 = p.X + b2;&#xA;			y2 = p.Y;&#xA;			z2 = p.Z;&#xA;&#xA;			x3 = p.X + b2 + ((4 / 10) * b1);&#xA;			y3 = p.Y;&#xA;			z3 = p.Z + ((1 / 10) * h1);&#xA;&#xA;			x4 = p.X + b2 + ((7 / 10) * b1);&#xA;			y4 = p.Y;&#xA;			z4 = p.Z + ((3 / 10) * h1);&#xA;&#xA;			x5 = p.X + b2 + ((9 / 10) * b1);&#xA;			y5 = p.Y;&#xA;			z5 = p.Z + ((6 / 10) * h1);&#xA;&#xA;			x6 = p.X + b2 + b1;&#xA;			y6 = p.Y;&#xA;			z6 = p.Z + h1;&#xA;&#xA;			x7 = p.X + b2 + b1;&#xA;			y7 = p.Y;&#xA;			z7 = p.Z + h;&#xA;&#xA;			x8 = p.X;&#xA;			y8 = p.Y;&#xA;			z8 = p.Z + h;&#xA;		}&#xA;&#xA;		if(direc == &quot;x-&quot;)&#xA;		{&#xA;			x1 = p.X;&#xA;			y1 = p.Y;&#xA;			z1 = p.Z;&#xA;&#xA;			x2 = p.X - b2;&#xA;			y2 = p.Y;&#xA;			z2 = p.Z;&#xA;&#xA;			x3 = p.X - b2 - ((4 / 10) * b1);&#xA;			y3 = p.Y;&#xA;			z3 = p.Z + ((1 / 10) * h1);&#xA;&#xA;			x4 = p.X - b2 - ((7 / 10) * b1);&#xA;			y4 = p.Y;&#xA;			z4 = p.Z + ((3 / 10) * h1);&#xA;&#xA;			x5 = p.X - b2 - ((9 / 10) * b1);&#xA;			y5 = p.Y;&#xA;			z5 = p.Z + ((6 / 10) * h1);&#xA;&#xA;			x6 = p.X - b2 - b1;&#xA;			y6 = p.Y;&#xA;			z6 = p.Z + h1;&#xA;&#xA;			x7 = p.X - b2 - b1;&#xA;			y7 = p.Y;&#xA;			z7 = p.Z + h;&#xA;&#xA;			x8 = p.X;&#xA;			y8 = p.Y;&#xA;			z8 = p.Z + h;&#xA;		}&#xA;&#xA;		if(direc == &quot;y+&quot;)&#xA;		{&#xA;			x1 = p.X;&#xA;			y1 = p.Y;&#xA;			z1 = p.Z;&#xA;&#xA;			x2 = p.X;&#xA;			y2 = p.Y + b2;&#xA;			z2 = p.Z;&#xA;&#xA;			x3 = p.X;&#xA;			y3 = p.Y + b2 + ((4 / 10) * b1);&#xA;			z3 = p.Z + ((1 / 10) * h1);&#xA;&#xA;			x4 = p.X;&#xA;			y4 = p.Y + b2 + ((7 / 10) * b1);&#xA;			z4 = p.Z + ((3 / 10) * h1);&#xA;&#xA;			x5 = p.X;&#xA;			y5 = p.Y + b2 + ((9 / 10) * b1);&#xA;			z5 = p.Z + ((6 / 10) * h1);&#xA;&#xA;			x6 = p.X;&#xA;			y6 = p.Y + b2 + b1;&#xA;			z6 = p.Z + h1;&#xA;&#xA;			x7 = p.X;&#xA;			y7 = p.Y + b2 + b1;&#xA;			z7 = p.Z + h;&#xA;&#xA;			x8 = p.X;&#xA;			y8 = p.Y;&#xA;			z8 = p.Z + h;&#xA;		}&#xA;&#xA;		if(direc == &quot;y-&quot;)&#xA;		{&#xA;			x1 = p.X;&#xA;			y1 = p.Y;&#xA;			z1 = p.Z;&#xA;&#xA;			x2 = p.X;&#xA;			y2 = p.Y - b2;&#xA;			z2 = p.Z;&#xA;&#xA;			x3 = p.X;&#xA;			y3 = p.Y - b2 - ((4 / 10) * b1);&#xA;			z3 = p.Z + ((1 / 10) * h1);&#xA;&#xA;			x4 = p.X;&#xA;			y4 = p.Y - b2 - ((7 / 10) * b1);&#xA;			z4 = p.Z + ((3 / 10) * h1);&#xA;&#xA;			x5 = p.X;&#xA;			y5 = p.Y - b2 - ((9 / 10) * b1);&#xA;			z5 = p.Z + ((6 / 10) * h1);&#xA;&#xA;			x6 = p.X;&#xA;			y6 = p.Y - b2 - b1;&#xA;			z6 = p.Z + h1;&#xA;&#xA;			x7 = p.X;&#xA;			y7 = p.Y - b2 - b1;&#xA;			z7 = p.Z + h;&#xA;&#xA;			x8 = p.X;&#xA;			y8 = p.Y;&#xA;			z8 = p.Z + h;&#xA;		}&#xA;	}&#xA;&#xA;&#xA;	p1 = Point.ByCoordinates(x1, y1, z1);&#xA;	p2 = Point.ByCoordinates(x2, y2, z2);&#xA;	p3 = Point.ByCoordinates(x3, y3, z3);&#xA;	p4 = Point.ByCoordinates(x4, y4, z4);&#xA;	p5 = Point.ByCoordinates(x5, y5, z5);&#xA;	p6 = Point.ByCoordinates(x6, y6, z6);&#xA;	p7 = Point.ByCoordinates(x7, y7, z7);&#xA;	p8 = Point.ByCoordinates(x8, y8, z8);&#xA;&#xA;	poly = Polygon.ByPoints({p1, p2, p3, p4, p5, p6, p7, p8});&#xA;&#xA;	curve = PolyCurve.ByPoints({p1, p2, p3, p4, p5, p6, p7, p8}, true);&#xA;&#xA;	return = curve;&#xA;&#xA;};" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="c28abe09-46d8-4f3e-b911-cf862febad42" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="1616.83591201385" y="-138.7643804992" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="//创建单卷杀长方体栱部分，&#xA;//cur-&gt;边界曲线&#xA;//width-&gt;长方体长度&#xA;//direction-&gt;延伸方向&#xA;def createCubiod(cur, width, direction)&#xA;{&#xA;	x1 = 0;&#xA;	y1 = 0;&#xA;	z1 = 0;&#xA;	x2 = 0;&#xA;	y2 = 0;&#xA;	z2 = 0;&#xA;&#xA;	geometry = [Imperative]&#xA;	{&#xA;		if(direction == &quot;x+&quot;)&#xA;		{&#xA;			x1 = cur.StartPoint.X + width;&#xA;			y1 = cur.StartPoint.Y;&#xA;			z1 = cur.StartPoint.Z;&#xA;&#xA;			x2 = cur.EndPoint.X + width;&#xA;			y2 = cur.EndPoint.Y;&#xA;			z2 = cur.EndPoint.Z;&#xA;		}&#xA;&#xA;		if(direction == &quot;x-&quot;)&#xA;		{&#xA;			x1 = cur.StartPoint.X - width;&#xA;			y1 = cur.StartPoint.Y;&#xA;			z1 = cur.StartPoint.Z;&#xA;&#xA;			x2 = cur.EndPoint.X - width;&#xA;			y2 = cur.EndPoint.Y;&#xA;			z2 = cur.EndPoint.Z;&#xA;		}&#xA;&#xA;		if(direction == &quot;y+&quot;)&#xA;		{&#xA;			x1 = cur.StartPoint.X;&#xA;			y1 = cur.StartPoint.Y + width;&#xA;			z1 = cur.StartPoint.Z;&#xA;&#xA;			x2 = cur.EndPoint.X;&#xA;			y2 = cur.EndPoint.Y + width;&#xA;			z2 = cur.EndPoint.Z;&#xA;		}&#xA;&#xA;		if(direction == &quot;y-&quot;)&#xA;		{&#xA;			x1 = cur.StartPoint.X;&#xA;			y1 = cur.StartPoint.Y - width;&#xA;			z1 = cur.StartPoint.Z;&#xA;&#xA;			x2 = cur.EndPoint.X;&#xA;			y2 = cur.EndPoint.Y - width;&#xA;			z2 = cur.EndPoint.Z;&#xA;		}&#xA;	}&#xA;&#xA;	p1 = Point.ByCoordinates(x1, y1, z1);&#xA;	p2 = Point.ByCoordinates(x2, y2, z2);&#xA;&#xA;	curve = PolyCurve.ByPoints({p1, p2}, false);&#xA;&#xA;	return = curve;&#xA;&#xA;};" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="2b11fee3-ada1-486a-b10f-7285bc5c4799" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="2216.84796512767" y="-115.38728752074" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="//获取创建枋类构件的中心点&#xA;//p_center-&gt;与坊正交的栱的长方体部分的质心&#xA;//p_down-&gt;栌枓的内角点&#xA;//dh-&gt;与坊正交的栱的高的一半&#xA;def getNDGFangCenterPoint(p_center, p_down, dh)&#xA;{&#xA;	x1 = 0;&#xA;	y1 = 0;&#xA;	z1 = p_down.Z + (p_center.Z + dh - p_down.Z) / 2;&#xA;&#xA;	p1 = Point.ByCoordinates(x1, y1, z1);&#xA;&#xA;	return = p1;&#xA;};" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="0a7c427b-41be-4928-98fd-10e91ce54375" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="2832.4447468938" y="-99.8025588684322" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="//获取创建枋类构件的中心点&#xA;//p_center-&gt;与坊正交的栱的长方体部分的质心&#xA;//p_down-&gt;栌枓的内角点&#xA;//dh-&gt;与坊正交的栱的高的一半&#xA;def getHGFang(p, db, w, l, h)&#xA;{&#xA;	x1 = p.X + db - l / 2;&#xA;	y1 = p.Y - w / 2;&#xA;	z1 = p.Z + h / 2;&#xA;&#xA;	p1 = Point.ByCoordinates(x1, y1, z1);&#xA;&#xA;	cube = Cuboid.ByLengths(p1, l, w, h);&#xA;&#xA;	return = cube;&#xA;};" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="efac0dde-5c4f-4a21-b45f-dbb2bfc5e7e5" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="3346.74079241993" y="-92.0101945422784" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="def getMidPoint(p1, p2, h1, dh, h)&#xA;{&#xA;	x1 = (p1.X + p2.X) / 2;&#xA;	y1 = (p1.Y + p2.Y) / 2;&#xA;	z1 = p1.Z + h1 + dh + h / 2;&#xA;&#xA;	p_mid = Point.ByCoordinates(x1, y1, z1);&#xA;&#xA;	return = p_mid;&#xA;};" ShouldFocus="false" />
    <CoreNodeModels.Input.DoubleSlider guid="d2085207-53fb-48f9-9878-ce2ac849527f" type="CoreNodeModels.Input.DoubleSlider" nickname="b_12" x="-1484.72125704674" y="-4021.06424632471" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <System.Double>632</System.Double>
      <Range min="580" max="680" step="1" />
    </CoreNodeModels.Input.DoubleSlider>
    <CoreNodeModels.Input.DoubleSlider guid="678de147-592d-4364-a019-343093be90d2" type="CoreNodeModels.Input.DoubleSlider" nickname="r_16" x="-1485.11837806161" y="-4381.03788151109" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <System.Double>70</System.Double>
      <Range min="50" max="100" step="2" />
    </CoreNodeModels.Input.DoubleSlider>
    <CoreNodeModels.Input.DoubleSlider guid="79b9eac5-6126-4de9-9d79-fd1df2bf256a" type="CoreNodeModels.Input.DoubleSlider" nickname="b_15" x="-1485.38919919352" y="-4574.24258084897" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <System.Double>722</System.Double>
      <Range min="680" max="780" step="2" />
    </CoreNodeModels.Input.DoubleSlider>
    <CoreNodeModels.Input.DoubleSlider guid="45eb9376-dd25-47ef-910f-2e9dd4f7d17e" type="CoreNodeModels.Input.DoubleSlider" nickname="l_14" x="-1484.16685353509" y="-4645.13862903799" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <System.Double>466</System.Double>
      <Range min="400" max="530" step="2" />
    </CoreNodeModels.Input.DoubleSlider>
    <CoreNodeModels.Input.DoubleSlider guid="aa79ecb8-58cd-4948-b5c1-ca054dba4eac" type="CoreNodeModels.Input.DoubleSlider" nickname="b1_15" x="-1484.16685353509" y="-4741.70393605405" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <System.Double>90</System.Double>
      <Range min="70" max="120" step="2" />
    </CoreNodeModels.Input.DoubleSlider>
    <CoreNodeModels.Input.DoubleSlider guid="7b2770c1-7471-4df9-90ce-4e052a223ec7" type="CoreNodeModels.Input.DoubleSlider" nickname="h_13" x="-1487.83389051039" y="-4927.5004761356" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <System.Double>60</System.Double>
      <Range min="50" max="80" step="2" />
    </CoreNodeModels.Input.DoubleSlider>
    <CoreNodeModels.Input.DoubleSlider guid="f4950276-5946-42b8-9a8f-65bcb442f7ed" type="CoreNodeModels.Input.DoubleSlider" nickname="l_13" x="-1485.38919919352" y="-4832.15751477796" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <System.Double>568</System.Double>
      <Range min="500" max="620" step="2" />
    </CoreNodeModels.Input.DoubleSlider>
    <CoreNodeModels.Input.DoubleSlider guid="7c7368c6-c311-4aaf-a4d2-6334f195585f" type="CoreNodeModels.Input.DoubleSlider" nickname="b_01" x="-1418.19241992453" y="-2185.02267699444" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <System.Double>120</System.Double>
      <Range min="100" max="150" step="5" />
    </CoreNodeModels.Input.DoubleSlider>
    <CoreNodeModels.Input.DoubleSlider guid="0110c7ed-43be-4a1c-9605-4c99655ecc29" type="CoreNodeModels.Input.DoubleSlider" nickname="b1_01" x="-1419.93813719025" y="-2278.71853643529" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <System.Double>100</System.Double>
      <Range min="80" max="130" step="5" />
    </CoreNodeModels.Input.DoubleSlider>
    <CoreNodeModels.Input.DoubleSlider guid="1aef89b8-5bc1-4ab2-a231-d8ed9a17c1ab" type="CoreNodeModels.Input.DoubleSlider" nickname="h1_01" x="-1418.05927000745" y="-2105.7157991757" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <System.Double>30</System.Double>
      <Range min="20" max="50" step="2" />
    </CoreNodeModels.Input.DoubleSlider>
    <CoreNodeModels.Input.DoubleSlider guid="42ff6256-589d-4f9c-9289-c315ab77e63d" type="CoreNodeModels.Input.DoubleSlider" nickname="h2_01" x="-1415.46717199206" y="-2029.24667413121" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <System.Double>36</System.Double>
      <Range min="20" max="50" step="2" />
    </CoreNodeModels.Input.DoubleSlider>
    <CoreNodeModels.Input.DoubleSlider guid="25cd4e99-94de-459b-954a-9a25560105f6" type="CoreNodeModels.Input.DoubleSlider" nickname="b2_01" x="-1413.89661137145" y="-1950.16665572256" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <System.Double>40</System.Double>
      <Range min="20" max="50" step="2" />
    </CoreNodeModels.Input.DoubleSlider>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="83654766-3bca-4b6b-a4a4-ab79a6d766f6" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="CenterPoint" x="-1420.34025794725" y="-2389.52986189963" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="Point.ByCoordinates(0, 0, 0);" ShouldFocus="false" />
    <CoreNodeModels.Input.DoubleSlider guid="3dfe2b18-a428-496b-872c-4a8e12d62e00" type="CoreNodeModels.Input.DoubleSlider" nickname="b1_04" x="-1428.06474452663" y="-2483.20985073942" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <System.Double>45</System.Double>
      <Range min="30" max="50" step="1" />
    </CoreNodeModels.Input.DoubleSlider>
    <CoreNodeModels.Input.DoubleSlider guid="32400e44-d45e-4738-af66-93cd0e2c1045" type="CoreNodeModels.Input.DoubleSlider" nickname="h1_04" x="-1428.50620100589" y="-2579.9447391941" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <System.Double>17</System.Double>
      <Range min="5" max="30" step="1" />
    </CoreNodeModels.Input.DoubleSlider>
    <CoreNodeModels.Input.DoubleSlider guid="f7ccc2df-1e40-4438-9e5c-281a04cf7f74" type="CoreNodeModels.Input.DoubleSlider" nickname="b_04" x="-1428.72004418312" y="-2670.39352693358" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <System.Double>70</System.Double>
      <Range min="50" max="100" step="5" />
    </CoreNodeModels.Input.DoubleSlider>
    <CoreNodeModels.Input.DoubleSlider guid="3785db76-36b0-482c-b0b0-65229395b783" type="CoreNodeModels.Input.DoubleSlider" nickname="b2_04" x="-1432.50883623839" y="-2762.6519756709" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <System.Double>40</System.Double>
      <Range min="20" max="60" step="5" />
    </CoreNodeModels.Input.DoubleSlider>
    <CoreNodeModels.Input.DoubleSlider guid="35411072-d811-4314-82b7-670e29a03c5d" type="CoreNodeModels.Input.DoubleSlider" nickname="h_04" x="-1435.19539763873" y="-2849.12786716335" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <System.Double>45</System.Double>
      <Range min="30" max="50" step="1" />
    </CoreNodeModels.Input.DoubleSlider>
    <CoreNodeModels.Input.DoubleSlider guid="0ee57d16-d1be-44a2-b6c2-e6232b4469bc" type="CoreNodeModels.Input.DoubleSlider" nickname="h2_04" x="-1439.55879609034" y="-2935.28267470251" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <System.Double>18</System.Double>
      <Range min="5" max="30" step="1" />
    </CoreNodeModels.Input.DoubleSlider>
    <CoreNodeModels.Input.DoubleSlider guid="d5501f1e-f14a-441e-9b15-88a720ec7ecd" type="CoreNodeModels.Input.DoubleSlider" nickname="h2_05" x="-1442.21332126145" y="-3021.20385638364" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <System.Double>0</System.Double>
      <Range min="0" max="10" step="1" />
    </CoreNodeModels.Input.DoubleSlider>
    <CoreNodeModels.Input.DoubleSlider guid="a247819c-52bb-426b-b65b-ee705c978791" type="CoreNodeModels.Input.DoubleSlider" nickname="b_06" x="-1448.51543252443" y="-3111.14776765059" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <System.Double>466</System.Double>
      <Range min="400" max="500" step="2" />
    </CoreNodeModels.Input.DoubleSlider>
    <CoreNodeModels.Input.DoubleSlider guid="c2510042-c434-410c-86a6-f385cb925f98" type="CoreNodeModels.Input.DoubleSlider" nickname="h1_06" x="-1449.33251661579" y="-3215.13681336716" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <System.Double>32</System.Double>
      <Range min="20" max="50" step="2" />
    </CoreNodeModels.Input.DoubleSlider>
    <CoreNodeModels.Input.DoubleSlider guid="f30bcd95-591d-4014-926b-09f51d72e956" type="CoreNodeModels.Input.DoubleSlider" nickname="h_06" x="-1447.63206512423" y="-3311.88252970203" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <System.Double>60</System.Double>
      <Range min="50" max="80" step="2" />
    </CoreNodeModels.Input.DoubleSlider>
    <CoreNodeModels.Input.DoubleSlider guid="d27bf3df-e0f0-47aa-bf7e-40542416c99d" type="CoreNodeModels.Input.DoubleSlider" nickname="b2_08" x="-1439.07564551521" y="-3406.00314540124" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <System.Double>90</System.Double>
      <Range min="70" max="100" step="2" />
    </CoreNodeModels.Input.DoubleSlider>
    <CoreNodeModels.Input.DoubleSlider guid="db0836da-dc9f-42ac-899d-bd20ea16f789" type="CoreNodeModels.Input.DoubleSlider" nickname="b_02" x="-1440.79299200718" y="-3495.11820647104" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <System.Double>280</System.Double>
      <Range min="250" max="350" step="5" />
    </CoreNodeModels.Input.DoubleSlider>
    <CoreNodeModels.Input.DoubleSlider guid="973651d4-a263-425b-b9c3-69d478e92a4b" type="CoreNodeModels.Input.DoubleSlider" nickname="b_07" x="-1453.74379341638" y="-3588.1326485075" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <System.Double>220</System.Double>
      <Range min="180" max="300" step="5" />
    </CoreNodeModels.Input.DoubleSlider>
    <CoreNodeModels.Input.DoubleSlider guid="6ee453e0-acf3-4638-8ed7-bbd4898be5f9" type="CoreNodeModels.Input.DoubleSlider" nickname="b_10" x="-1460.35052254208" y="-3702.91696840435" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <System.Double>413</System.Double>
      <Range min="350" max="450" step="1" />
    </CoreNodeModels.Input.DoubleSlider>
    <CoreNodeModels.Input.DoubleSlider guid="fde7e01b-a6ac-4f70-a90c-553803fa8edb" type="CoreNodeModels.Input.DoubleSlider" nickname="h1_10" x="-1465.58930097653" y="-3797.75322297376" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <System.Double>32</System.Double>
      <Range min="20" max="50" step="2" />
    </CoreNodeModels.Input.DoubleSlider>
    <CoreNodeModels.Input.DoubleSlider guid="37d652a2-5e3c-407b-9dee-b5537aee585d" type="CoreNodeModels.Input.DoubleSlider" nickname="b2_12" x="-1469.77934304458" y="-3910.16819813569" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <System.Double>90</System.Double>
      <Range min="70" max="100" step="2" />
    </CoreNodeModels.Input.DoubleSlider>
    <CoreNodeModels.Input.DoubleSlider guid="a937013d-d544-4e49-8806-32b3bbfa0205" type="CoreNodeModels.Input.DoubleSlider" nickname="h_09" x="-1478.3429455718" y="-4120.01455206759" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <System.Double>60</System.Double>
      <Range min="50" max="80" step="2" />
    </CoreNodeModels.Input.DoubleSlider>
    <CoreNodeModels.Input.DoubleSlider guid="7fe5c62e-2944-4851-bb43-476cc71354a1" type="CoreNodeModels.Input.DoubleSlider" nickname="b_09" x="-1480.56640215612" y="-4211.46924171738" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <System.Double>568</System.Double>
      <Range min="500" max="620" step="2" />
    </CoreNodeModels.Input.DoubleSlider>
    <CoreNodeModels.Input.DoubleSlider guid="bc347a09-6be6-4b0f-a395-80a244d31d6e" type="CoreNodeModels.Input.DoubleSlider" nickname="b_11" x="-1481.67257581887" y="-4306.69603107934" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <System.Double>256</System.Double>
      <Range min="200" max="300" step="2" />
    </CoreNodeModels.Input.DoubleSlider>
    <CoreNodeModels.Input.DoubleSlider guid="d06fe0f2-6d6a-4519-bed4-365f372ea5f8" type="CoreNodeModels.Input.DoubleSlider" nickname="h_16" x="-1482.4524520122" y="-4478.60429945304" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <System.Double>377</System.Double>
      <Range min="300" max="420" step="1" />
    </CoreNodeModels.Input.DoubleSlider>
    <CoreNodeModels.Input.DoubleSlider guid="bcc85b4a-1a40-4656-acb7-e020c6bcfa51" type="CoreNodeModels.Input.DoubleSlider" nickname="h_01" x="-1410.44718356804" y="-1877.98495649676" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <System.Double>80</System.Double>
      <Range min="60" max="100" step="2" />
    </CoreNodeModels.Input.DoubleSlider>
    <CoreNodeModels.Input.DoubleInput guid="b9dd35e4-fc01-486c-9e75-0514d1513bb9" type="CoreNodeModels.Input.DoubleInput" nickname="m" x="-1301.04517176981" y="-1803.38132348651" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <System.Double value="4" />
    </CoreNodeModels.Input.DoubleInput>
    <CoreNodeModels.Input.DoubleSlider guid="b16d67c8-641f-4993-8e4e-cc7bb78a0ee0" type="CoreNodeModels.Input.DoubleSlider" nickname="h1_02" x="-1408.94022205552" y="-1726.81064263859" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <System.Double>32</System.Double>
      <Range min="20" max="50" step="2" />
    </CoreNodeModels.Input.DoubleSlider>
    <CoreNodeModels.Input.DoubleSlider guid="3c05d49d-0168-4da2-9d41-9bebaa46ed48" type="CoreNodeModels.Input.DoubleSlider" nickname="h_02" x="-1407.92415917992" y="-1642.56028545273" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <System.Double>60</System.Double>
      <Range min="50" max="80" step="2" />
    </CoreNodeModels.Input.DoubleSlider>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="21945698-52b6-494b-aa94-4290e1f6c8b1" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="201.450231162117" y="-4481.50682258243" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="//create first tiao&#xA;//p-&gt;centerpoint&#xA;&#xA;&#xA;def createFirst(centerPoint, b1_01, h1_01, b_01, b2_01, h_01, h2_01, m,&#xA;b_02, b1_02, h1_02, h_02)&#xA;{&#xA;	result = {};&#xA;	/*****create quad****/&#xA;	//centerpoint&#xA;	p = centerPoint;&#xA;	//radius&#xA;	r = b1_01 / 2;&#xA;	//create Trape -- d&#xA;	T_d = (b_01 - b1_01) / 2;&#xA;	//create U Plane -- h1&#xA;	U_h1 = h_01 - h1_01;&#xA;	//create JuanSha -- u&#xA;	JS_u = h2_01 / U_h1;&#xA;	//create JuanSha -- v&#xA;	JS_v = b2_01 / b_01;&#xA;	//create JuanSha -- 1 - v&#xA;	JS_mv = 1 - (b2_01 / b_01);&#xA;	//create JuanSha -- b2&#xA;	JS_b2 = ((b_02 - 2 * b1_02) - b_01) / 2;&#xA;	//bottom quad&#xA;	bottomQuad = createQuadCenter(centerPoint, r);&#xA;&#xA;	bottomQuadSurface = Surface.ByPatch(bottomQuad);&#xA;&#xA;	result = List.AddItemToEnd(bottomQuadSurface, result);&#xA;	/****create trape*****/&#xA;	//trape1&#xA;	p_T1 = Surface.PointAtParameter(bottomQuadSurface, 0.5, 0);&#xA;&#xA;	direc1 = &quot;y-&quot;;&#xA;	Trape1 = createTrape(p_T1, b1_01, b_01, h1_01, T_d, direc1);&#xA;&#xA;	Trape1_S = Surface.ByPatch(Trape1);&#xA;&#xA;	result = List.AddItemToEnd(Trape1_S, result);&#xA;&#xA;	//trape2&#xA;	p_T2 = Surface.PointAtParameter(bottomQuadSurface, 0.5, 1);&#xA;&#xA;	direc2 = &quot;y+&quot;;&#xA;	Trape2 = createTrape(p_T2, b1_01, b_01, h1_01, T_d, direc2);&#xA;&#xA;	Trape2_S = Surface.ByPatch(Trape2);&#xA;&#xA;	result = List.AddItemToEnd(Trape2_S, result);&#xA;&#xA;	//trape3&#xA;	p_T3 = Surface.PointAtParameter(bottomQuadSurface, 1, 0.5);&#xA;&#xA;	direc3 = &quot;x+&quot;;&#xA;	Trape3 = createTrape(p_T3, b1_01, b_01, h1_01, T_d, direc3);&#xA;&#xA;	Trape3_S = Surface.ByPatch(Trape3);&#xA;&#xA;	result = List.AddItemToEnd(Trape3_S, result);&#xA;&#xA;	//trape4&#xA;	p_T4 = Surface.PointAtParameter(bottomQuadSurface, 0, 0.5);&#xA;&#xA;	direc4 = &quot;x-&quot;;&#xA;	Trape4 = createTrape(p_T4, b1_01, b_01, h1_01, T_d, direc4);&#xA;&#xA;	Trape4_S = Surface.ByPatch(Trape4);&#xA;&#xA;	result = List.AddItemToEnd(Trape4_S, result);&#xA;&#xA;	/*****create U plane*****/&#xA;	//UPlane1&#xA;	p_U1 = Surface.PointAtParameter(Trape1_S, 0, 0.5);&#xA;&#xA;	direc12 = &quot;x&quot;;&#xA;	UPlane1 = createUPlane(p_U1, b_01, b2_01, U_h1, h2_01, direc12);&#xA;&#xA;	UPlane1_S = Surface.ByPatch(UPlane1);&#xA;&#xA;	result = List.AddItemToEnd(UPlane1_S, result);&#xA;&#xA;	//UPlane2&#xA;	p_U2 = Surface.PointAtParameter(Trape2_S, 0, 0.5);&#xA;&#xA;&#xA;	UPlane2 = createUPlane(p_U2, b_01, b2_01, U_h1, h2_01, direc12);&#xA;&#xA;	UPlane2_S = Surface.ByPatch(UPlane2);&#xA;&#xA;	result = List.AddItemToEnd(UPlane2_S, result);&#xA;&#xA;	//UPlane3&#xA;	p_U3 = Surface.PointAtParameter(Trape3_S, 0, 0.5);&#xA;&#xA;	direc34 = &quot;y&quot;;&#xA;	UPlane3 = createUPlane(p_U3, b_01, b2_01, U_h1, h2_01, direc34);&#xA;&#xA;	UPlane3_S = Surface.ByPatch(UPlane3);&#xA;&#xA;	result = List.AddItemToEnd(UPlane3_S, result);&#xA;&#xA;	//UPlane4&#xA;	p_U4 = Surface.PointAtParameter(Trape4_S, 0, 0.5);&#xA;&#xA;&#xA;	UPlane4 = createUPlane(p_U4, b_01, b2_01, U_h1, h2_01, direc34);&#xA;&#xA;	UPlane4_S = Surface.ByPatch(UPlane4);&#xA;&#xA;	result = List.AddItemToEnd(UPlane4_S, result);&#xA;&#xA;	/*****create JuanSha*****/&#xA;	//JS1&#xA;	direc1 = &quot;y-&quot;;&#xA;	//JS1_1&#xA;	p_JS1_1 = Surface.PointAtParameter(UPlane1_S, JS_u, JS_v);&#xA;&#xA;	JS1_1 = createJuanshaCurve(p_JS1_1, b1_02, JS_b2, m, h1_02, h_02, direc1);&#xA;&#xA;	JS1_C1 = Surface.ByPatch(JS1_1);&#xA;&#xA;	result = List.AddItemToEnd(JS1_C1, result);&#xA;&#xA;	//JS1_2&#xA;	p_JS1_2 = Surface.PointAtParameter(UPlane1_S, JS_u, JS_mv);&#xA;&#xA;	JS1_2 = createJuanshaCurve(p_JS1_2, b1_02, JS_b2, m, h1_02, h_02, direc1);&#xA;&#xA;	JS1_C2 = Surface.ByPatch(JS1_2);&#xA;&#xA;	result = List.AddItemToEnd(JS1_C2, result);&#xA;&#xA;	JS1 = {};&#xA;&#xA;	JS1 = List.AddItemToEnd(JS1_1, JS1);&#xA;	JS1 = List.AddItemToEnd(JS1_2, JS1);&#xA;	JS1_S = Surface.ByLoft(JS1);&#xA;&#xA;	result = List.AddItemToEnd(JS1_S, result);&#xA;&#xA;	//JS2&#xA;	direc2 = &quot;y+&quot;;&#xA;	//JS2_1&#xA;	p_JS2_1 = Surface.PointAtParameter(UPlane2_S, JS_u, JS_v);&#xA;&#xA;	JS2_1 = createJuanshaCurve(p_JS2_1, b1_02, JS_b2, m, h1_02, h_02, direc2);&#xA;&#xA;	JS2_C1 = Surface.ByPatch(JS2_1);&#xA;&#xA;	result = List.AddItemToEnd(JS2_C1, result);&#xA;&#xA;	//JS2_2&#xA;	p_JS2_2 = Surface.PointAtParameter(UPlane2_S, JS_u, JS_mv);&#xA;&#xA;	JS2_2 = createJuanshaCurve(p_JS2_2, b1_02, JS_b2, m, h1_02, h_02, direc2);&#xA;&#xA;	JS2_C2 = Surface.ByPatch(JS2_2);&#xA;&#xA;	result = List.AddItemToEnd(JS2_C2, result);&#xA;&#xA;	JS2 = {};&#xA;&#xA;	JS2 = List.AddItemToEnd(JS2_1, JS2);&#xA;	JS2 = List.AddItemToEnd(JS2_2, JS2);&#xA;	JS2_S = Surface.ByLoft(JS2);&#xA;&#xA;	result = List.AddItemToEnd(JS2_S, result);&#xA;&#xA;	//JS3&#xA;	direc3 = &quot;x+&quot;;&#xA;	//JS3_1&#xA;	p_JS3_1 = Surface.PointAtParameter(UPlane3_S, JS_u, JS_v);&#xA;&#xA;	JS3_1 = createJuanshaCurve(p_JS3_1, b1_02, JS_b2, m, h1_02, h_02, direc3);&#xA;&#xA;	JS3_C1 = Surface.ByPatch(JS3_1);&#xA;&#xA;	result = List.AddItemToEnd(JS3_C1, result);&#xA;&#xA;	//JS3_2&#xA;	p_JS3_2 = Surface.PointAtParameter(UPlane3_S, JS_u, JS_mv);&#xA;&#xA;	JS3_2 = createJuanshaCurve(p_JS3_2, b1_02, JS_b2, m, h1_02, h_02, direc3);&#xA;&#xA;	JS3_C2 = Surface.ByPatch(JS3_2);&#xA;&#xA;	result = List.AddItemToEnd(JS3_C2, result);&#xA;&#xA;	JS3 = {};&#xA;&#xA;	JS3 = List.AddItemToEnd(JS3_1, JS3);&#xA;	JS3 = List.AddItemToEnd(JS3_2, JS3);&#xA;	JS3_S = Surface.ByLoft(JS3);&#xA;&#xA;	result = List.AddItemToEnd(JS3_S, result);&#xA;&#xA;	//JS4&#xA;	direc4 = &quot;x-&quot;;&#xA;	//JS4_1&#xA;	p_JS4_1 = Surface.PointAtParameter(UPlane4_S, JS_u, JS_v);&#xA;&#xA;	JS4_1 = createJuanshaCurve(p_JS4_1, b1_02, JS_b2, m, h1_02, h_02, direc4);&#xA;&#xA;	JS4_C1 = Surface.ByPatch(JS4_1);&#xA;&#xA;	result = List.AddItemToEnd(JS4_C1, result);&#xA;&#xA;	//JS4_2&#xA;	p_JS4_2 = Surface.PointAtParameter(UPlane4_S, JS_u, JS_mv);&#xA;&#xA;	JS4_2 = createJuanshaCurve(p_JS4_2, b1_02, JS_b2, m, h1_02, h_02, direc4);&#xA;&#xA;	JS4_C2 = Surface.ByPatch(JS4_2);&#xA;&#xA;	result = List.AddItemToEnd(JS4_C2, result);&#xA;&#xA;	JS4 = {};&#xA;&#xA;	JS4 = List.AddItemToEnd(JS4_1, JS4);&#xA;	JS4 = List.AddItemToEnd(JS4_2, JS4);&#xA;	JS4_S = Surface.ByLoft(JS4);&#xA;&#xA;	result = List.AddItemToEnd(JS4_S, result);&#xA;&#xA;	return = result;&#xA;};" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="b49a469f-4a27-4fec-b261-cd823ba16b36" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="-859.613683582653" y="-2505.17621368829" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="createFirst(centerPoint, b1_01, h1_01, b_01, b2_01, h_01, h2_01, m,&#xA;b_02, b1_02, h1_02, h_02);" ShouldFocus="false" />
    <CoreNodeModels.Input.DoubleSlider guid="0dc65791-bde4-4893-ace8-893546fb042a" type="CoreNodeModels.Input.DoubleSlider" nickname="b1_02" x="-1407.66011878095" y="-1519.91239902383" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <System.Double>60</System.Double>
      <Range min="50" max="80" step="2" />
    </CoreNodeModels.Input.DoubleSlider>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="7c7368c6-c311-4aaf-a4d2-6334f195585f" start_index="0" end="b49a469f-4a27-4fec-b261-cd823ba16b36" end_index="3" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="0110c7ed-43be-4a1c-9605-4c99655ecc29" start_index="0" end="b49a469f-4a27-4fec-b261-cd823ba16b36" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="1aef89b8-5bc1-4ab2-a231-d8ed9a17c1ab" start_index="0" end="b49a469f-4a27-4fec-b261-cd823ba16b36" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="42ff6256-589d-4f9c-9289-c315ab77e63d" start_index="0" end="b49a469f-4a27-4fec-b261-cd823ba16b36" end_index="6" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="25cd4e99-94de-459b-954a-9a25560105f6" start_index="0" end="b49a469f-4a27-4fec-b261-cd823ba16b36" end_index="4" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="83654766-3bca-4b6b-a4a4-ab79a6d766f6" start_index="0" end="b49a469f-4a27-4fec-b261-cd823ba16b36" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="db0836da-dc9f-42ac-899d-bd20ea16f789" start_index="0" end="b49a469f-4a27-4fec-b261-cd823ba16b36" end_index="8" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="bcc85b4a-1a40-4656-acb7-e020c6bcfa51" start_index="0" end="b49a469f-4a27-4fec-b261-cd823ba16b36" end_index="5" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="b9dd35e4-fc01-486c-9e75-0514d1513bb9" start_index="0" end="b49a469f-4a27-4fec-b261-cd823ba16b36" end_index="7" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="b16d67c8-641f-4993-8e4e-cc7bb78a0ee0" start_index="0" end="b49a469f-4a27-4fec-b261-cd823ba16b36" end_index="10" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="3c05d49d-0168-4da2-9d41-9bebaa46ed48" start_index="0" end="b49a469f-4a27-4fec-b261-cd823ba16b36" end_index="11" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="b49a469f-4a27-4fec-b261-cd823ba16b36" start_index="0" end="274c0dbb-ce47-4bd3-b5e5-71dbb034d72d" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="0dc65791-bde4-4893-ace8-893546fb042a" start_index="0" end="b49a469f-4a27-4fec-b261-cd823ba16b36" end_index="9" portType="0" />
  </Connectors>
  <Notes />
  <Annotations>
    <Dynamo.Graph.Annotations.AnnotationModel guid="af42b2d7-4dfc-4572-ae37-39edbb65ebe9" annotationText="Utils" left="-1227.65622215585" top="-299.564728421163" width="4958.39701457578" height="3645.00798359581" fontSize="96" InitialTop="-174.564728421163" InitialHeight="3550.00798359581" TextblockHeight="115" backgrouund="#FFC1D676">
      <Models ModelGuid="b4507afa-aec1-48bf-938a-bb1176acde48" />
      <Models ModelGuid="e33ede6c-2584-4453-a710-d069a8839c71" />
      <Models ModelGuid="f175e972-ff1d-42e6-a572-0733af4a5991" />
      <Models ModelGuid="3c56039a-0c02-4545-a8c1-1ddeaba22086" />
      <Models ModelGuid="c28abe09-46d8-4f3e-b911-cf862febad42" />
      <Models ModelGuid="2b11fee3-ada1-486a-b10f-7285bc5c4799" />
      <Models ModelGuid="0a7c427b-41be-4928-98fd-10e91ce54375" />
      <Models ModelGuid="efac0dde-5c4f-4a21-b45f-dbb2bfc5e7e5" />
    </Dynamo.Graph.Annotations.AnnotationModel>
  </Annotations>
  <Presets />
  <Cameras>
    <Camera Name="背景预览" eyeX="-192.889435625773" eyeY="237.694074568242" eyeZ="136.471415600774" lookX="206.668106890422" lookY="-241.515150007695" lookZ="-101.293223462102" upX="0.502124960421273" upY="0.829037543749287" upZ="-0.246104031159017" />
  </Cameras>
</Workspace>